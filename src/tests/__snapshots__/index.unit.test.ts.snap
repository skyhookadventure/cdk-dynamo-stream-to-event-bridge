// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`creates resources matching the snapshot 1`] = `
{
  "Resources": {
    "streamTableAlarm30FED3DA": {
      "Properties": {
        "AlarmDescription": "Alert when a record has failed to stream to event bridge using cdk-dynamo-stream-to-event-bridge.",
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "testStack53BF581B",
              },
              "StreamToEventBridge",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": [
          {
            "Name": "QueueName",
            "Value": {
              "Fn::GetAtt": [
                "streamTableDLQ0AE2E98D",
                "QueueName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "NumberOfMessagesSent",
        "Namespace": "AWS/SQS",
        "Period": 3600,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "streamTableDLQ0AE2E98D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "MessageRetentionPeriod": 1209600,
        "QueueName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "testStack53BF581B",
              },
              "StreamToEventBridgeDLQ",
            ],
          ],
        },
        "VisibilityTimeout": 120,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "streamTableFunctionDynamoDBEventSourcetestStack45E4763F": {
      "Properties": {
        "BatchSize": 10,
        "BisectBatchOnFunctionError": true,
        "DestinationConfig": {
          "OnFailure": {
            "Destination": {
              "Fn::GetAtt": [
                "streamTableDLQ0AE2E98D",
                "Arn",
              ],
            },
          },
        },
        "EventSourceArn": {
          "Fn::GetAtt": [
            "testStack53BF581B",
            "StreamArn",
          ],
        },
        "FunctionName": {
          "Ref": "streamTableFunctionE2FC641D",
        },
        "MaximumRetryAttempts": 10,
        "StartingPosition": "TRIM_HORIZON",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "streamTableFunctionE2FC641D": {
      "DependsOn": [
        "streamTableFunctionServiceRoleDefaultPolicyA0B5635E",
        "streamTableFunctionServiceRole077F8269",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-lambda-nodejs-mock-fake-bucket",
          "S3Key": "cdk-lambda-nodejs-mock-fake-lambda.ts",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Streams updated rows from the table ",
              {
                "Ref": "testStack53BF581B",
              },
              "to EventBridge.",
            ],
          ],
        },
        "Environment": {
          "Variables": {
            "EVENT_BUS_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":events:",
                  {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId",
                  },
                  ":event-bus/default",
                ],
              ],
            },
            "EVENT_PREFIX": "EventPrefix",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "streamTableFunctionServiceRole077F8269",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "streamTableFunctionServiceRole077F8269": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "streamTableFunctionServiceRoleDefaultPolicyA0B5635E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":events:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":event-bus/default",
                  ],
                ],
              },
            },
            {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "testStack53BF581B",
                  "StreamArn",
                ],
              },
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "streamTableDLQ0AE2E98D",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "streamTableDLQ0AE2E98D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "streamTableFunctionServiceRoleDefaultPolicyA0B5635E",
        "Roles": [
          {
            "Ref": "streamTableFunctionServiceRole077F8269",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "streamTableFunctionstreamTableDLQMapping07DEC73C": {
      "Properties": {
        "BatchSize": 10,
        "Enabled": false,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "streamTableDLQ0AE2E98D",
            "Arn",
          ],
        },
        "FunctionName": {
          "Ref": "streamTableFunctionE2FC641D",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "testStack53BF581B": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S",
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH",
          },
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
        "TableName": "TableName",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;
